.data
medio: .word 0
valorMedio: .word 1
buscador:     # Class Instance buscador
objetivo: .word 7
STR_0: .asciiz "El elemento "
STR_1: .asciiz " esta en el indice: "
BUFFER: .space 200


.text
.globl main     # Entry point of the program
main:
load SELF, Busqueda    # Load data into register SELF
jal init_busqueda    # Jump and link to init_busqueda
load $t0, objetivo    # Load data into register $t0
load $t0, 7    # Load data into register $t0
save $t0, $t0    # save data into register
load SELF, buscador    # Load data into register SELF
load PARAM::izquierda, 0    # Load data into register PARAM::izquierda
load PARAM::derecha, 6    # Load data into register PARAM::derecha
load PARAM::objetivo, $t0    # Load data into register PARAM::objetivo
jal busquedabinaria_busqueda    # Jump and link to busquedabinaria_busqueda
load $t0, indice    # Load data into register $t0
load $t0, None    # Load data into register $t0
save $t0, $t0    # save data into register
load $t0, STR_0    # Load data into register $t0
load $t0, objetivo    # Load data into register $t0
add $t0, $t0, $t0    # Addition operation
load $t0, STR_1    # Load data into register $t0
concat $t0, $t0, $t0    # Concatenation operation
load $t0, indice    # Load data into register $t0
add $t0, $t0, $t0    # Addition operation
load $v0,      # Set mode to print 
syscall  # Print the value
# End of program
li $v0, 10     # Set mode to exit
syscall       # Exit the program


init_busqueda:
jr $ra    # Return to caller
obtenervalorenindice_busqueda:
L0:
load $t0, 1    # Load data into register $t0
move $v0, $t0    # Move value from $t0 to $v0
jr $ra    # Return to caller
j L1    # Jump to L1
L1:
L2:
load $t0, 3    # Load data into register $t0
move $v0, $t0    # Move value from $t0 to $v0
jr $ra    # Return to caller
j L3    # Jump to L3
L3:
L4:
load $t0, 5    # Load data into register $t0
move $v0, $t0    # Move value from $t0 to $v0
jr $ra    # Return to caller
j L5    # Jump to L5
L5:
L6:
load $t0, 7    # Load data into register $t0
move $v0, $t0    # Move value from $t0 to $v0
jr $ra    # Return to caller
j L7    # Jump to L7
L7:
L8:
load $t0, 9    # Load data into register $t0
move $v0, $t0    # Move value from $t0 to $v0
jr $ra    # Return to caller
j L9    # Jump to L9
L9:
L10:
load $t0, 11    # Load data into register $t0
move $v0, $t0    # Move value from $t0 to $v0
jr $ra    # Return to caller
j L11    # Jump to L11
L11:
L12:
load $t0, 13    # Load data into register $t0
move $v0, $t0    # Move value from $t0 to $v0
jr $ra    # Return to caller
j L13    # Jump to L13
L13:
load $t0, 1    # Load data into register $t0
move $v0, $t0    # Move value from $t0 to $v0
jr $ra    # Return to caller
busquedabinaria_busqueda:
load $t0, derecha    # Load data into register $t0
load $t0, izquierda    # Load data into register $t0
beq $t0, $t0, L14    # Jump to L14 if equals
slt $t0, $t0, $t0   # Save 1 if $t0 < $t0 else 0
bne $t0, $zero, L14    # Jump to L14 if not equals
beq $t0, $zero, L15    # Jump to L15 if equals
L14:
load $t0, izquierda    # Load data into register $t0
load $t0, derecha    # Load data into register $t0
add $t0, $t0, $t0    # Addition operation
load $t0, 2    # Load data into register $t0
div $t0, $t0
mflo $t0    # Save the quotient (from LO register) into destination
load $s0, medio    # Load data into register $s0
save $s0, $t0    # save data into register
load PARAM::indice, $t0    # Load data into register PARAM::indice
jal obtenervalorenindice_busqueda    # Jump and link to obtenervalorenindice_busqueda
load $t0, valorMedio    # Load data into register $t0
load $t0, 1    # Load data into register $t0
save $t0, $t0    # save data into register
load $t0, valorMedio    # Load data into register $t0
load $t0, objetivo    # Load data into register $t0
slt $t0, $t0, $t0   # Save 1 if $t0 < $t0 else 0
bne $t0, $zero, L16    # Jump to L16 if not equals
beq $t0, $zero, L17    # Jump to L17 if equals
L16:
load PARAM::izquierda, $t0    # Load data into register PARAM::izquierda
jal busquedabinaria_busqueda    # Jump and link to busquedabinaria_busqueda
load $t0, None    # Load data into register $t0
move $v0, $t0    # Move value from $t0 to $v0
jr $ra    # Return to caller
j L17    # Jump to L17
L17:
load $t0, medio    # Load data into register $t0
load $t0, 1    # Load data into register $t0
add $t0, $t0, $t0    # Addition operation
load PARAM::izquierda, num    # Load data into register PARAM::izquierda
jal busquedabinaria_busqueda    # Jump and link to busquedabinaria_busqueda
load $t0, None    # Load data into register $t0
move $v0, $t0    # Move value from $t0 to $v0
jr $ra    # Return to caller
j L15    # Jump to L15
L15:
load $t0, 1    # Load data into register $t0
move $v0, $t0    # Move value from $t0 to $v0
jr $ra    # Return to caller